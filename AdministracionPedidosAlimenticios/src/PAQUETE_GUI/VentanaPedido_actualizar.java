package PAQUETE_GUI;

import PAQUETE_DP.PedidoDP;
import PAQUETE_DP.ProductoDP;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class VentanaPedido_actualizar extends javax.swing.JInternalFrame {

    PedidoDP pedidoDP;
    ArrayList<ProductoDP> productos;

    public VentanaPedido_actualizar() {
        pedidoDP = new PedidoDP();
        initComponents();
        cargarProductos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_actualPedido_producto = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tb_actualPedido_actual = new javax.swing.JTable();
        btn_actualPedido_guardar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        cb_actualPedido_parametro = new javax.swing.JComboBox<>();
        tf_actualPedido_argumento = new javax.swing.JTextField();
        btn_actualPedido_individual = new javax.swing.JButton();
        btn_actualPedido_eliminar = new javax.swing.JButton();
        btn_actualPedido_agregar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jLabel1.setText("Productos");

        tb_actualPedido_producto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código de producto", "Descripción", "Precio"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tb_actualPedido_producto);

        jLabel2.setText("Pedido actual:");

        tb_actualPedido_actual.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código de producto", "Descripción", "Precio"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tb_actualPedido_actual);

        btn_actualPedido_guardar.setText("Guardar");
        btn_actualPedido_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_actualPedido_guardarActionPerformed(evt);
            }
        });

        jLabel3.setText("Buscar por:");

        cb_actualPedido_parametro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Código" }));

        btn_actualPedido_individual.setText("Buscar");
        btn_actualPedido_individual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_actualPedido_individualActionPerformed(evt);
            }
        });

        btn_actualPedido_eliminar.setText("Eliminar");
        btn_actualPedido_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_actualPedido_eliminarActionPerformed(evt);
            }
        });

        btn_actualPedido_agregar.setText("Agregar");
        btn_actualPedido_agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_actualPedido_agregarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(190, 190, 190)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(172, 172, 172)
                                .addComponent(btn_actualPedido_guardar))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btn_actualPedido_eliminar)
                                    .addComponent(btn_actualPedido_agregar)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(260, 260, 260)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cb_actualPedido_parametro, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(tf_actualPedido_argumento, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btn_actualPedido_individual)))))
                .addGap(83, 83, 83))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cb_actualPedido_parametro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_actualPedido_argumento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_actualPedido_individual))
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btn_actualPedido_agregar)
                        .addGap(117, 117, 117)
                        .addComponent(btn_actualPedido_eliminar)
                        .addGap(102, 102, 102)))
                .addComponent(btn_actualPedido_guardar)
                .addGap(34, 34, 34))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_actualPedido_individualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_actualPedido_individualActionPerformed
        int pedidoNumero = Integer.parseInt(tf_actualPedido_argumento.getText());
        pedidoDP.setPedidoNumero(pedidoNumero);
        cargarDetallePedido();
    }//GEN-LAST:event_btn_actualPedido_individualActionPerformed

    private void btn_actualPedido_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_actualPedido_guardarActionPerformed
        guardarPedido();
        pedidoDP.modificarDP();
    }//GEN-LAST:event_btn_actualPedido_guardarActionPerformed

    private void btn_actualPedido_agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_actualPedido_agregarActionPerformed
        int index = tb_actualPedido_producto.getSelectedRow();
        addProductoAPedido(productos.get(index));
    }//GEN-LAST:event_btn_actualPedido_agregarActionPerformed

    private void btn_actualPedido_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_actualPedido_eliminarActionPerformed
        eliminarProductoDePedido(tb_actualPedido_actual.getSelectedRow());
    }//GEN-LAST:event_btn_actualPedido_eliminarActionPerformed
    
    public void cargarProductos() {
        productos = pedidoDP.getProductoDP().consultarTodosDP();
        DefaultTableModel model = (DefaultTableModel) tb_actualPedido_producto.getModel();
        model.setRowCount(0);

        for (ProductoDP temp : productos) {
            model.addRow(new Object[]{temp.getCodigo(), temp.getNombre(), temp.getPrecio()});
        }
    }

    public void cargarDetallePedido() {
        ArrayList<ProductoDP> pedidos = pedidoDP.consultarDetalleDP();
        System.out.println(productos.size());
        DefaultTableModel model = (DefaultTableModel) tb_actualPedido_actual.getModel();
        model.setRowCount(0);

        for (ProductoDP temp : pedidos) {
            model.addRow(new Object[]{temp.getCodigo(), temp.getNombre(),
                temp.getPrecio()});
        }
    }

    public void addProductoAPedido(ProductoDP producto) {
        DefaultTableModel model = (DefaultTableModel) tb_actualPedido_actual.getModel();
        model.addRow(new Object[]{producto.getCodigo(), producto.getNombre(), producto.getPrecio()});
    }

    public void eliminarProductoDePedido(int index) {
        DefaultTableModel model = (DefaultTableModel) tb_actualPedido_actual.getModel();
        model.removeRow(index);
    }

    public void guardarPedido() {
        pedidoDP.reiniciarLista();
        int numeroProductos = tb_actualPedido_actual.getRowCount();
        for (int i = 0; i < numeroProductos; i++) {
            String codigo = tb_actualPedido_actual.getValueAt(i, 0).toString();
            pedidoDP.addProductoDP(new ProductoDP(codigo));
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_actualPedido_agregar;
    private javax.swing.JButton btn_actualPedido_eliminar;
    private javax.swing.JButton btn_actualPedido_guardar;
    private javax.swing.JButton btn_actualPedido_individual;
    private javax.swing.JComboBox<String> cb_actualPedido_parametro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tb_actualPedido_actual;
    private javax.swing.JTable tb_actualPedido_producto;
    private javax.swing.JTextField tf_actualPedido_argumento;
    // End of variables declaration//GEN-END:variables
}
